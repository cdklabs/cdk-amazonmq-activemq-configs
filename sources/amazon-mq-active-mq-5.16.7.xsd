<?xml version="1.0" encoding="UTF-8"?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://activemq.apache.org/schema/core" elementFormDefault="qualified" targetNamespace="http://activemq.apache.org/schema/core">
  <xs:element name="abortSlowAckConsumerStrategy">
    <xs:complexType>
      <xs:attribute name="abortConnection" type="xs:boolean"/>
      <xs:attribute name="checkPeriod" type="xs:long"/>
      <xs:attribute name="ignoreIdleConsumers" type="xs:boolean"/>
      <xs:attribute name="ignoreNetworkConsumers" type="xs:boolean"/>
      <xs:attribute name="maxSlowCount" type="xs:long"/>
      <xs:attribute name="maxSlowDuration" type="xs:long"/>
      <xs:attribute name="maxTimeSinceLastAck" type="xs:long"/>
      <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="abortSlowConsumerStrategy">
    <xs:complexType>
      <xs:attribute name="abortConnection" type="xs:boolean"/>
      <xs:attribute name="checkPeriod" type="xs:long"/>
      <xs:attribute name="ignoreNetworkConsumers" type="xs:boolean"/>
      <xs:attribute name="maxSlowCount" type="xs:long"/>
      <xs:attribute name="maxSlowDuration" type="xs:long"/>
      <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="authorizationEntry">
    <xs:complexType>
      <xs:attribute name="admin" type="xs:string"/>
      <xs:attribute name="queue" type="xs:string"/>
      <xs:attribute name="read" type="xs:string"/>
      <xs:attribute name="tempQueue" type="xs:boolean"/>
      <xs:attribute name="tempTopic" type="xs:boolean"/>
      <xs:attribute name="topic" type="xs:string"/>
      <xs:attribute name="write" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="authorizationMap">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="authorizationEntries" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:authorizationEntry"/>
                <xs:element ref="tns:tempDestinationAuthorizationEntry"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="defaultEntry" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:authorizationEntry"/>
                <xs:element ref="tns:tempDestinationAuthorizationEntry"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="tempDestinationAuthorizationEntry" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:tempDestinationAuthorizationEntry"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="authorizationPlugin">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="map" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:authorizationMap"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="broker">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="destinationInterceptors" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:mirroredQueue"/>
                <xs:element ref="tns:virtualDestinationInterceptor"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="destinationPolicy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:policyMap"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="destinations" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="networkConnectors" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:networkConnector"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="persistenceAdapter" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:kahaDB"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="plugins" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:authorizationPlugin"/>
                <xs:element ref="tns:discardingDLQBrokerPlugin"/>
                <xs:element ref="tns:forcePersistencyModeBrokerPlugin"/>
                <xs:element ref="tns:redeliveryPlugin"/>
                <xs:element ref="tns:statisticsBrokerPlugin"/>
                <xs:element ref="tns:timeStampingBrokerPlugin"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="systemUsage" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:systemUsage"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="transportConnectors" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:transportConnector"/>
              </xs:choice>
            </xs:complexType>
            <xs:key name="protocolName">
              <xs:selector xpath="tns:transportConnector"/>
              <xs:field xpath="@name"/>
            </xs:key>
          </xs:element>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="advisorySupport" type="xs:string"/>
      <xs:attribute name="allowTempAutoCreationOnSend" type="xs:boolean"/>
      <xs:attribute name="anonymousProducerAdvisorySupport" type="xs:boolean"/>
      <xs:attribute name="cacheTempDestinations" type="xs:boolean"/>
      <xs:attribute name="consumerSystemUsagePortion" type="xs:integer"/>
      <xs:attribute name="dedicatedTaskRunner" type="xs:boolean"/>
      <xs:attribute name="deleteAllMessagesOnStartup" type="xs:string"/>
      <xs:attribute name="enableMessageExpirationOnActiveDurableSubs" type="xs:boolean"/>
      <xs:attribute name="keepDurableSubsActive" type="xs:boolean"/>
      <xs:attribute name="maxPurgedDestinationsPerSweep" type="xs:integer"/>
      <xs:attribute name="maxSchedulerRepeatAllowed" type="xs:integer"/>
      <xs:attribute name="monitorConnectionSplits" type="xs:boolean"/>
      <xs:attribute name="offlineDurableSubscriberTaskSchedule" type="xs:long"/>
      <xs:attribute name="offlineDurableSubscriberTimeout" type="xs:long"/>
      <xs:attribute name="persistenceThreadPriority" type="xs:integer"/>
      <xs:attribute name="persistent" type="xs:string"/>
      <xs:attribute name="populateJMSXUserID" type="xs:boolean"/>
      <xs:attribute name="producerSystemUsagePortion" type="xs:integer"/>
      <xs:attribute name="rejectDurableConsumers" type="xs:boolean"/>
      <xs:attribute name="rollbackOnlyOnAsyncException" type="xs:boolean"/>
      <xs:attribute name="schedulePeriodForDestinationPurge" type="xs:integer"/>
      <xs:attribute name="schedulerSupport" type="xs:string"/>
      <xs:attribute name="splitSystemUsageForProducersConsumers" type="xs:boolean"/>
      <xs:attribute name="systemUsage" type="xs:string"/>
      <xs:attribute name="taskRunnerPriority" type="xs:integer"/>
      <xs:attribute name="timeBeforePurgeTempDestinations" type="xs:integer"/>
      <xs:attribute name="useAuthenticatedPrincipalForJMSXUserID" type="xs:boolean"/>
      <xs:attribute name="useMirroredQueues" type="xs:boolean"/>
      <xs:attribute name="useTempMirroredQueues" type="xs:boolean"/>
      <xs:attribute name="useVirtualDestSubs" type="xs:boolean"/>
      <xs:attribute name="useVirtualDestSubsOnCreation" type="xs:boolean"/>
      <xs:attribute name="useVirtualTopics" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="cachedMessageGroupMapFactory">
    <xs:complexType>
      <xs:attribute name="cacheSize" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="clientIdFilterDispatchPolicy">
    <xs:complexType>
      <xs:attribute name="ptpClientId" type="xs:string"/>
      <xs:attribute name="ptpSuffix" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="compositeQueue">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="forwardTo" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
                <xs:element ref="tns:filteredDestination"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="concurrentSend" type="xs:boolean"/>
      <xs:attribute name="copyMessage" type="xs:boolean"/>
      <xs:attribute name="forwardOnly" type="xs:boolean"/>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="sendWhenNotMatched" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="compositeTopic">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="forwardTo" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
                <xs:element ref="tns:filteredDestination"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="concurrentSend" type="xs:boolean"/>
      <xs:attribute name="copyMessage" type="xs:boolean"/>
      <xs:attribute name="forwardOnly" type="xs:boolean"/>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="sendWhenNotMatched" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="conditionalNetworkBridgeFilterFactory">
    <xs:complexType>
      <xs:attribute name="rateDuration" type="xs:integer"/>
      <xs:attribute name="rateLimit" type="xs:integer"/>
      <xs:attribute name="replayDelay" type="xs:integer"/>
      <xs:attribute name="replayWhenNoConsumers" type="xs:boolean"/>
      <xs:attribute name="selectorAware" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="constantPendingMessageLimitStrategy">
    <xs:complexType>
      <xs:attribute name="limit" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="discarding">
    <xs:complexType>
      <xs:attribute name="deadLetterQueue" type="xs:string"/>
      <xs:attribute name="enableAudit" type="xs:boolean"/>
      <xs:attribute name="expiration" type="xs:long"/>
      <xs:attribute name="maxAuditDepth" type="xs:integer"/>
      <xs:attribute name="maxProducersToAudit" type="xs:integer"/>
      <xs:attribute name="processExpired" type="xs:boolean"/>
      <xs:attribute name="processNonPersistent" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="discardingDLQBrokerPlugin">
    <xs:complexType>
      <xs:attribute name="dropAll" type="xs:boolean"/>
      <xs:attribute name="dropOnly" type="xs:string"/>
      <xs:attribute name="dropTemporaryQueues" type="xs:boolean"/>
      <xs:attribute name="dropTemporaryTopics" type="xs:boolean"/>
      <xs:attribute name="reportInterval" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="fileCursor">
    <xs:complexType/>
  </xs:element>
  <xs:element name="fileDurableSubscriberCursor">
    <xs:complexType/>
  </xs:element>
  <xs:element name="fileQueueCursor">
    <xs:complexType/>
  </xs:element>
  <xs:element name="filteredDestination">
    <xs:complexType>
      <xs:attribute name="queue" type="xs:string"/>
      <xs:attribute name="selector" type="xs:string"/>
      <xs:attribute name="topic" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="fixedCountSubscriptionRecoveryPolicy">
    <xs:complexType>
      <xs:attribute name="maximumSize" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="fixedSizedSubscriptionRecoveryPolicy">
    <xs:complexType>
      <xs:attribute name="maximumSize" type="xs:integer"/>
      <xs:attribute name="useSharedBuffer" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="forcePersistencyModeBrokerPlugin">
    <xs:complexType>
      <xs:attribute name="persistenceFlag" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="individualDeadLetterStrategy">
    <xs:complexType>
      <xs:attribute name="destinationPerDurableSubscriber" type="xs:boolean"/>
      <xs:attribute name="enableAudit" type="xs:boolean"/>
      <xs:attribute name="expiration" type="xs:long"/>
      <xs:attribute name="maxAuditDepth" type="xs:integer"/>
      <xs:attribute name="maxProducersToAudit" type="xs:integer"/>
      <xs:attribute name="processExpired" type="xs:boolean"/>
      <xs:attribute name="processNonPersistent" type="xs:boolean"/>
      <xs:attribute name="queuePrefix" type="xs:string"/>
      <xs:attribute name="queueSuffix" type="xs:string"/>
      <xs:attribute name="topicPrefix" type="xs:string"/>
      <xs:attribute name="topicSuffix" type="xs:string"/>
      <xs:attribute name="useQueueForQueueMessages" type="xs:boolean"/>
      <xs:attribute name="useQueueForTopicMessages" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="checkpointIntervalType">
    <xs:restriction base="xs:long">
      <xs:minInclusive value="5000"/>
      <xs:maxInclusive value="25000"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="indexWriteBatchSizeType">
    <xs:restriction base="xs:long">
      <xs:minInclusive value="1000"/>
      <xs:maxInclusive value="3000"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="kahaDB">
    <xs:complexType>
      <xs:attribute name="concurrentStoreAndDispatchQueues" type="xs:boolean"/>
      <xs:attribute name="cleanupOnStop" type="xs:boolean"/>
      <xs:attribute name="checkpointInterval" type="tns:checkpointIntervalType"/>
      <xs:attribute name="indexWriteBatchSize" type="tns:indexWriteBatchSizeType"/>
      <xs:attribute name="journalDiskSyncInterval" type="xs:long"/>
      <xs:attribute name="journalDiskSyncStrategy">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="always"/>
            <xs:enumeration value="periodic"/>
            <xs:enumeration value="never"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="preallocationStrategy">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="sparse_file"/>
            <xs:enumeration value="os_kernel_copy"/>
            <xs:enumeration value="zeros"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="lastImageSubscriptionRecoveryPolicy">
    <xs:complexType/>
  </xs:element>
  <xs:element name="memoryUsage">
    <xs:complexType>
      <xs:attribute name="percentOfJvmHeap">
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="70"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="messageGroupHashBucketFactory">
    <xs:complexType>
      <xs:attribute name="bucketCount" type="xs:integer"/>
      <xs:attribute name="cacheSize" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="mirroredQueue">
    <xs:complexType>
      <xs:attribute name="copyMessage" type="xs:boolean"/>
      <xs:attribute name="postfix" type="xs:string"/>
      <xs:attribute name="prefix" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="networkConnector">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="connectionFilter" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:sequence minOccurs="0" maxOccurs="1">
                <xs:any minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="durableDestinations" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
                <xs:element ref="tns:filteredDestination"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="dynamicallyIncludedDestinations" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
                <xs:element ref="tns:filteredDestination"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="excludedDestinations" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
                <xs:element ref="tns:filteredDestination"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="staticallyIncludedDestinations" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
                <xs:element ref="tns:filteredDestination"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="advisoryAckPercentage" type="xs:integer"/>
      <xs:attribute name="advisoryForFailedForward" type="xs:boolean"/>
      <xs:attribute name="advisoryPrefetchSize" type="xs:integer"/>
      <xs:attribute name="alwaysSyncSend" type="xs:boolean"/>
      <xs:attribute name="bridgeFactory" type="xs:string"/>
      <xs:attribute name="bridgeTempDestinations" type="xs:boolean"/>
      <xs:attribute name="brokerName" type="xs:string"/>
      <xs:attribute name="brokerURL" type="xs:string"/>
      <xs:attribute name="checkDuplicateMessagesOnDuplex" type="xs:boolean"/>
      <xs:attribute name="clientIdToken" type="xs:string"/>
      <xs:attribute name="conduitNetworkQueueSubscriptions" type="xs:boolean"/>
      <xs:attribute name="conduitSubscriptions" type="xs:boolean"/>
      <xs:attribute name="connectionFilter" type="xs:string"/>
      <xs:attribute name="consumerPriorityBase" type="xs:integer"/>
      <xs:attribute name="consumerTTL" type="xs:integer"/>
      <xs:attribute name="decreaseNetworkConsumerPriority" type="xs:boolean"/>
      <xs:attribute name="destinationFilter" type="xs:string"/>
      <xs:attribute name="dispatchAsync" type="xs:boolean"/>
      <xs:attribute name="duplex" type="xs:boolean"/>
      <xs:attribute name="dynamicOnly" type="xs:boolean"/>
      <xs:attribute name="gcDestinationViews" type="xs:boolean"/>
      <xs:attribute name="gcSweepTime" type="xs:long"/>
      <xs:attribute name="localUri" type="xs:string"/>
      <xs:attribute name="messageTTL" type="xs:integer"/>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="networkTTL" type="xs:integer"/>
      <xs:attribute name="objectName" type="xs:string"/>
      <xs:attribute name="prefetchSize" type="xs:string"/>
      <xs:attribute name="staticBridge" type="xs:boolean"/>
      <xs:attribute name="suppressDuplicateQueueSubscriptions" type="xs:boolean"/>
      <xs:attribute name="suppressDuplicateTopicSubscriptions" type="xs:boolean"/>
      <xs:attribute name="syncDurableSubs" type="xs:boolean"/>
      <xs:attribute name="uri" type="xs:string"/>
      <xs:attribute name="useBrokerNameAsIdSees" type="xs:boolean"/>
      <xs:attribute name="useCompression" type="xs:boolean"/>
      <xs:attribute name="useVirtualDestSubs" type="xs:boolean"/>
      <xs:attribute name="userName" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="noSubscriptionRecoveryPolicy">
    <xs:complexType/>
  </xs:element>
  <xs:element name="oldestMessageEvictionStrategy">
    <xs:complexType>
      <xs:attribute name="evictExpiredMessagesHighWatermark" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="oldestMessageWithLowestPriorityEvictionStrategy">
    <xs:complexType>
      <xs:attribute name="evictExpiredMessagesHighWatermark" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="policyEntry">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="deadLetterStrategy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:discarding"/>
                <xs:element ref="tns:individualDeadLetterStrategy"/>
                <xs:element ref="tns:sharedDeadLetterStrategy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="destination" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="dispatchPolicy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:clientIdFilterDispatchPolicy"/>
                <xs:element ref="tns:priorityDispatchPolicy"/>
                <xs:element ref="tns:priorityNetworkDispatchPolicy"/>
                <xs:element ref="tns:roundRobinDispatchPolicy"/>
                <xs:element ref="tns:simpleDispatchPolicy"/>
                <xs:element ref="tns:strictOrderDispatchPolicy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="messageEvictionStrategy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:oldestMessageEvictionStrategy"/>
                <xs:element ref="tns:oldestMessageWithLowestPriorityEvictionStrategy"/>
                <xs:element ref="tns:uniquePropertyMessageEvictionStrategy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="messageGroupMapFactory" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:cachedMessageGroupMapFactory"/>
                <xs:element ref="tns:messageGroupHashBucketFactory"/>
                <xs:element ref="tns:simpleMessageGroupMapFactory"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="networkBridgeFilterFactory" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:conditionalNetworkBridgeFilterFactory"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="pendingDurableSubscriberPolicy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:fileDurableSubscriberCursor"/>
                <xs:element ref="tns:storeDurableSubscriberCursor"/>
                <xs:element ref="tns:vmDurableCursor"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="pendingMessageLimitStrategy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:constantPendingMessageLimitStrategy"/>
                <xs:element ref="tns:prefetchRatePendingMessageLimitStrategy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="pendingQueuePolicy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:fileQueueCursor"/>
                <xs:element ref="tns:storeCursor"/>
                <xs:element ref="tns:vmQueueCursor"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="pendingSubscriberPolicy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:fileCursor"/>
                <xs:element ref="tns:vmCursor"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="slowConsumerStrategy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:abortSlowAckConsumerStrategy"/>
                <xs:element ref="tns:abortSlowConsumerStrategy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="subscriptionRecoveryPolicy" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:fixedCountSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:fixedSizedSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:lastImageSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:noSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:queryBasedSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:retainedMessageSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:timedSubscriptionRecoveryPolicy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="advisoryForConsumed" type="xs:boolean"/>
      <xs:attribute name="advisoryForDelivery" type="xs:boolean"/>
      <xs:attribute name="advisoryForDiscardingMessages" type="xs:boolean"/>
      <xs:attribute name="advisoryForFastProducers" type="xs:boolean"/>
      <xs:attribute name="advisoryForSlowConsumers" type="xs:boolean"/>
      <xs:attribute name="advisoryWhenFull" type="xs:boolean"/>
      <xs:attribute name="allConsumersExclusiveByDefault" type="xs:boolean"/>
      <xs:attribute name="alwaysRetroactive" type="xs:boolean"/>
      <xs:attribute name="blockedProducerWarningInterval" type="xs:long"/>
      <xs:attribute name="consumersBeforeDispatchStarts" type="xs:integer"/>
      <xs:attribute name="cursorMemoryHighWaterMark" type="xs:integer"/>
      <xs:attribute name="doOptimzeMessageStorage" type="xs:boolean"/>
      <xs:attribute name="durableTopicPrefetch" type="xs:integer"/>
      <xs:attribute name="enableAudit" type="xs:boolean"/>
      <xs:attribute name="expireMessagesPeriod" type="xs:long"/>
      <xs:attribute name="gcInactiveDestinations" type="xs:boolean"/>
      <xs:attribute name="gcWithNetworkConsumers" type="xs:boolean"/>
      <xs:attribute name="inactiveTimeoutBeforeGC" type="xs:long"/>
      <xs:attribute name="inactiveTimoutBeforeGC" type="xs:long"/>
      <xs:attribute name="includeBodyForAdvisory" type="xs:boolean"/>
      <xs:attribute name="lazyDispatch" type="xs:boolean"/>
      <xs:attribute name="maxAuditDepth" type="xs:integer"/>
      <xs:attribute name="maxBrowsePageSize" type="xs:integer"/>
      <xs:attribute name="maxDestinations" type="xs:integer"/>
      <xs:attribute name="maxExpirePageSize" type="xs:integer"/>
      <xs:attribute name="maxPageSize" type="xs:integer"/>
      <xs:attribute name="maxProducersToAudit" type="xs:integer"/>
      <xs:attribute name="maxQueueAuditDepth" type="xs:integer"/>
      <xs:attribute name="memoryLimit" type="xs:string"/>
      <xs:attribute name="messageGroupMapFactoryType" type="xs:string"/>
      <xs:attribute name="minimumMessageSize" type="xs:long"/>
      <xs:attribute name="optimizeMessageStoreInFlightLimit" type="xs:integer"/>
      <xs:attribute name="optimizedDispatch" type="xs:boolean"/>
      <xs:attribute name="persistJMSRedelivered" type="xs:boolean"/>
      <xs:attribute name="prioritizedMessages" type="xs:boolean"/>
      <xs:attribute name="producerFlowControl" type="xs:boolean"/>
      <xs:attribute name="queue" type="xs:string"/>
      <xs:attribute name="queueBrowserPrefetch" type="xs:integer"/>
      <xs:attribute name="queuePrefetch" type="xs:integer"/>
      <xs:attribute name="reduceMemoryFootprint" type="xs:boolean"/>
      <xs:attribute name="sendAdvisoryIfNoConsumers" type="xs:boolean"/>
      <xs:attribute name="sendDuplicateFromStoreToDLQ" type="xs:boolean"/>
      <xs:attribute name="sendFailIfNoSpace" type="xs:boolean"/>
      <xs:attribute name="sendFailIfNoSpaceAfterTimeout" type="xs:long"/>
      <xs:attribute name="storeUsageHighWaterMark" type="xs:integer"/>
      <xs:attribute name="strictOrderDispatch" type="xs:boolean"/>
      <xs:attribute name="tempQueue" type="xs:boolean"/>
      <xs:attribute name="tempTopic" type="xs:boolean"/>
      <xs:attribute name="timeBeforeDispatchStarts" type="xs:integer"/>
      <xs:attribute name="topic" type="xs:string"/>
      <xs:attribute name="topicPrefetch" type="xs:integer"/>
      <xs:attribute name="useCache" type="xs:boolean"/>
      <xs:attribute name="useConsumerPriority" type="xs:boolean"/>
      <xs:attribute name="usePrefetchExtension" type="xs:boolean"/>
      <xs:attribute name="useTopicSubscriptionInflightStats" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="policyMap">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="defaultEntry" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:policyEntry"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="policyEntries" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:policyEntry"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="UniqueQueue">
      <xs:selector xpath=".//tns:policyEntry"/>
      <xs:field xpath="@queue"/>
    </xs:unique>
    <xs:unique name="UniqueTopic">
      <xs:selector xpath=".//tns:policyEntry"/>
      <xs:field xpath="@topic"/>
    </xs:unique>
  </xs:element>
  <xs:element name="prefetchRatePendingMessageLimitStrategy">
    <xs:complexType>
      <xs:attribute name="multiplier" type="xs:double"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="priorityDispatchPolicy">
    <xs:complexType/>
  </xs:element>
  <xs:element name="priorityNetworkDispatchPolicy">
    <xs:complexType/>
  </xs:element>
  <xs:element name="queryBasedSubscriptionRecoveryPolicy">
    <xs:complexType>
      <xs:attribute name="query" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="queue">
    <xs:complexType>
      <xs:attribute name="DLQ" type="xs:boolean"/>
      <xs:attribute name="physicalName" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="redeliveryPlugin">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="redeliveryPolicyMap" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:redeliveryPolicyMap"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="fallbackToDeadLetter" type="xs:boolean"/>
      <xs:attribute name="sendToDlqIfMaxRetriesExceeded" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="redeliveryPolicy">
    <xs:complexType>
      <xs:attribute name="backOffMultiplier" type="xs:double"/>
      <xs:attribute name="collisionAvoidancePercent" type="xs:short"/>
      <xs:attribute name="initialRedeliveryDelay" type="xs:long"/>
      <xs:attribute name="maximumRedeliveries" type="xs:integer"/>
      <xs:attribute name="maximumRedeliveryDelay" type="xs:long"/>
      <xs:attribute name="preDispatchCheck" type="xs:boolean"/>
      <xs:attribute name="queue" type="xs:string"/>
      <xs:attribute name="redeliveryDelay" type="xs:long"/>
      <xs:attribute name="tempQueue" type="xs:boolean"/>
      <xs:attribute name="tempTopic" type="xs:boolean"/>
      <xs:attribute name="topic" type="xs:string"/>
      <xs:attribute name="useCollisionAvoidance" type="xs:boolean"/>
      <xs:attribute name="useExponentialBackOff" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="redeliveryPolicyMap">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="defaultEntry" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:redeliveryPolicy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="redeliveryPolicyEntries" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="tns:redeliveryPolicy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="retainedMessageSubscriptionRecoveryPolicy">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="wrapped" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:fixedCountSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:fixedSizedSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:lastImageSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:noSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:queryBasedSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:retainedMessageSubscriptionRecoveryPolicy"/>
                <xs:element ref="tns:timedSubscriptionRecoveryPolicy"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="roundRobinDispatchPolicy">
    <xs:complexType/>
  </xs:element>
  <xs:element name="sharedDeadLetterStrategy">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="deadLetterQueue" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:queue"/>
                <xs:element ref="tns:tempQueue"/>
                <xs:element ref="tns:tempTopic"/>
                <xs:element ref="tns:topic"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="enableAudit" type="xs:boolean"/>
      <xs:attribute name="expiration" type="xs:long"/>
      <xs:attribute name="maxAuditDepth" type="xs:integer"/>
      <xs:attribute name="maxProducersToAudit" type="xs:integer"/>
      <xs:attribute name="processExpired" type="xs:boolean"/>
      <xs:attribute name="processNonPersistent" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="simpleDispatchPolicy">
    <xs:complexType/>
  </xs:element>
  <xs:element name="simpleMessageGroupMapFactory">
    <xs:complexType/>
  </xs:element>
  <xs:element name="statisticsBrokerPlugin">
    <xs:complexType/>
  </xs:element>
  <xs:element name="storeCursor">
    <xs:complexType/>
  </xs:element>
  <xs:element name="storeDurableSubscriberCursor">
    <xs:complexType>
      <xs:attribute name="immediatePriorityDispatch" type="xs:boolean"/>
      <xs:attribute name="useCache" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="strictOrderDispatchPolicy">
    <xs:complexType/>
  </xs:element>
  <xs:element name="systemUsage">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:choice>
          <xs:element name="memoryUsage" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="tns:memoryUsage"/>
                <xs:any namespace="##other"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="sendFailIfNoSpace" type="xs:boolean"/>
      <xs:attribute name="sendFailIfNoSpaceAfterTimeout" type="xs:long"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempDestinationAuthorizationEntry">
    <xs:complexType>
      <xs:attribute name="admin" type="xs:string"/>
      <xs:attribute name="queue" type="xs:string"/>
      <xs:attribute name="read" type="xs:string"/>
      <xs:attribute name="tempQueue" type="xs:boolean"/>
      <xs:attribute name="tempTopic" type="xs:boolean"/>
      <xs:attribute name="topic" type="xs:string"/>
      <xs:attribute name="write" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempQueue">
    <xs:complexType>
      <xs:attribute name="DLQ" type="xs:boolean"/>
      <xs:attribute name="physicalName" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempTopic">
    <xs:complexType>
      <xs:attribute name="DLQ" type="xs:boolean"/>
      <xs:attribute name="physicalName" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="timeStampingBrokerPlugin">
    <xs:complexType>
      <xs:attribute name="futureOnly" type="xs:boolean"/>
      <xs:attribute name="processNetworkMessages" type="xs:boolean"/>
      <xs:attribute name="ttlCeiling" type="xs:long"/>
      <xs:attribute name="zeroExpirationOverride" type="xs:long"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="timedSubscriptionRecoveryPolicy">
    <xs:complexType>
      <xs:attribute name="recoverDuration" type="xs:long"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="topic">
    <xs:complexType>
      <xs:attribute name="DLQ" type="xs:boolean"/>
      <xs:attribute name="physicalName" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="protocol">
    <xs:restriction base="xs:string">
      <xs:enumeration value="openwire"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="transportConnector">
    <xs:complexType>
      <xs:attribute name="name" type="tns:protocol"/>
      <xs:attribute name="updateClusterClients" type="xs:boolean"/>
      <xs:attribute name="rebalanceClusterClients" type="xs:boolean"/>
      <xs:attribute name="updateClusterClientsOnRemove" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="uniquePropertyMessageEvictionStrategy">
    <xs:complexType>
      <xs:attribute name="evictExpiredMessagesHighWatermark" type="xs:integer"/>
      <xs:attribute name="propertyName" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="virtualDestinationInterceptor">
    <xs:complexType>
      <xs:choice minOccurs="1" maxOccurs="unbounded">
        <xs:choice>
          <xs:element name="virtualDestinations" minOccurs="1" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="tns:compositeQueue"/>
                <xs:element ref="tns:compositeTopic"/>
                <xs:element ref="tns:virtualTopic"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="virtualTopic">
    <xs:complexType>
      <xs:attribute name="concurrentSend" type="xs:boolean"/>
      <xs:attribute name="dropOnResourceLimit" type="xs:boolean"/>
      <xs:attribute name="local" type="xs:boolean"/>
      <xs:attribute name="name" type="xs:string"/>
      <xs:attribute name="postfix" type="xs:string"/>
      <xs:attribute name="prefix" type="xs:string"/>
      <xs:attribute name="selectorAware" type="xs:boolean"/>
      <xs:attribute name="setOriginalDestination" type="xs:boolean"/>
      <xs:attribute name="transactedSend" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="vmCursor">
    <xs:complexType/>
  </xs:element>
  <xs:element name="vmDurableCursor">
    <xs:complexType/>
  </xs:element>
  <xs:element name="vmQueueCursor">
    <xs:complexType/>
  </xs:element>
</xs:schema>
